#!/usr/bin/env bash

if [[ -d "$HOME/tmp/" ]]; then 
	mkdir -p "$HOME/tmp"
fi

setup_zsh() {
    if ! which zsh &> /dev/null; then
        if [[ $SHELL != "/usr/bin/zsh" ]]; then
            echo "Changing shell to zsh"
            chsh -s /usr/bin/zsh
            echo "Please relogin to use zsh as default shell"
        fi
    fi
}

check_and_install() {
    if ! pacman -Q "$1" &> /dev/null; then
        echo "$1 not installed"
        sudo pacman -S "$1"
    else
        echo "$1 already installed"
    fi
}

for i in $(cat "$HOME/.dotfiles/packagelist"); do
    check_and_install "$i"
done

if ! which nvim &> /dev/null; then
	cd "$HOME/tmp" || return
	git clone git@github.com:neovim/neovim
	cd neovim/ || return
    # This will only download version .9 I don't feel like automating to the most recent stable version rn
	git checkout release-0.9
	sudo pacman -S cmake make gcc glibc lua
	make CMAKE_BUILD_TYPE=RelWithDebInfo
	sudo make install	
    # Install packer for package management
	git clone --depth 1 https://github.com/wbthomason/packer.nvim\~/.local/share/nvim/site/pack/packer/start/packer.nvim
	echo "Please go to $HOME/.config/nvim/lua/senyc/packer.lua and type :PackerInstall"
else 
    echo "nvim already installed"
fi 

if ! which tmux &> /dev/null; then
    check_and_install tmux
    git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm
fi

if ! which conda &> /dev/null; then
    cd "$HOME/tmp" || return
    curl -o conda-install.sh https://repo.anaconda.com/archive/Anaconda3-2023.07-2-Linux-x86_64.sh
    chmod 700 conda-install.sh
    ./conda-install.sh
    echo "Creating python 3.11 environment, this will take a while"
    conda install -c conda-forge python=3.11
fi

setup_zsh
