#!/usr/bin/python3
improt argparse
import math
import tty
import sys
import time
import termios
from rich.live import Live
from rich.console import Console

def get_char():
    fd = sys.stdin.fileno()
    old_settings = termios.tcgetattr(fd)
    try:
        tty.setraw(sys.stdin.fileno())
        char = sys.stdin.read(1)
    finally:
        termios.tcsetattr(fd, termios.TCSADRAIN, old_settings)
    return char

def displayed_text(source: str, user_input: str):
    final_text = ''
    for source_char, input_char in zip(source, user_input):
        if source_char == input_char:
            final_text += f'[green]{input_char}'
        else:
            final_text += f'[red]{source_char}'
    return final_text + '[blue]' + (source[len(user_input)] if source[len(user_input)] != ' ' else '_') + '[white]' + source[len(user_input) + 1: len(source):]

def is_not_backspace(char):
    return char != '\x7f'

def calc_wpm(time_seconds: float, letters: int):
    words = letters / 5
    minutes = time_seconds / 60
    return math.floor(words / minutes)

def is_quit(char):
    return (char != '' and ord(char) == 3) or (char == '\n' or char == '\r')

def calc_correctness_percent(failures: int, letters: int):
    return round(((letters - failures) / letters) * 100)

def get_failures(source, user_input):
    failures = 0
    for source_letter, user_input_letter in zip(source, user_input):
        if user_input_letter != source_letter:
            failures += 1
    return failures

def main():
    DATA: str = "All the war-propaganda, all the screaming and lies and hatred, comes invariably from people who are not fighting."
    source = DATA
    user_input = ''
    console = Console(soft_wrap=True, no_color=False)
    start = end = None

    with Live(console=console, refresh_per_second=30) as display:
        display.update(f'[white]{source}')
        char = ''
        while True:
            char = get_char()
            if start is None:
                start = time.time()
            if is_quit(char):
                return
            if is_not_backspace(char):
                user_input += char
            else:
                user_input = user_input[:-1]
            if len(source) == len(user_input):
                end = time.time()
                break
            display.update(displayed_text(source, user_input))

    print(calc_wpm(end - start, len(source)), "words per minute")
    print(calc_correctness_percent(get_failures(source, user_input), len(source)), "percent correct")


if __name__ == '__main__':
    main()
